geom_boxplot()+
theme( legend.position = "none" )
plot
plot <- ggplot(D, aes(x=factor(lameLeg), y=A, color = factor(1)))+
geom_boxplot()+
theme( legend.position = "none" )
plot
#
par(mfrow = c(1, 2))
boxplot(D$A ~ D$lameLeg)
boxplot(D$W ~ D$lameLeg)
boxplot(D$PC3 ~ D$lameLeg)
boxplot(D$pc3 ~ D$lameLeg)
boxplot(D$pc4 ~ D$lameLeg)
boxplot(D$A ~ D$horse)
boxplot(D$A ~ D$horse)
boxplot(D$W ~ D$horse)
par(mfrow = c(1, 1))
boxplot(D$A ~ D$horse)
boxplot(D$A ~ D$horse)
boxplot(D$W ~ D$horse)
boxplot(D$A ~ D$horse)
boxplot(D$S ~ D$horse)
boxplot(D$W ~ D$horse)
x <- c(D$A, D$S)
x
x <- rep(D$lameLeg, 3)
x
y <- c(D$A, D$S, D$W)
z <- rep(c("A","S","W"), c(85,85,85))
z
x <- rep(D$lameLeg, 3)
y <- c(D$A, D$S, D$W)
z <- rep(c("A","S","W"), c(85,85,85))
ggplot(D, aes(x = x, y = y, color = z)) +  # ggplot function
geom_boxplot()
plot <- ggplot(D, aes(x = x, y = y, color = z)) +  # ggplot function
geom_boxplot()
plot
plot <- ggplot(D, aes(x = x, y = y, color = "red")) +  # ggplot function
geom_boxplot()
plot
aes(x = x, y = y, color = "red")
length(aes(x = x, y = y, color = "red"))
plot <- ggplot(D, aes(x = x, y = y)) +  # ggplot function
geom_boxplot()
plot
ggplot(data = warpbreaks, aes(x = wool, y = breaks)) +
geom_boxplot(
notch = T,
fill = c("blue", "red"),
outlier.color = NULL
) +
theme_classic() +
theme(legend.position = "none")
warpbreaks
data.plot <- data.frame(c(x,y,z)
data.plot
dataplot <- data.frame(c(x,y,z))
dataplot
dataplot <- data.frame(lameleg = x, scores = y, types = z)
dataplot
ggplot(data = dataplot, aes(x = lameleg, y = scores)) +
geom_boxplot(
notch = T,
fill = c("blue", "red", "yellow"),
outlier.color = NULL
) +
theme_classic() +
theme(legend.position = "none")
ggplot(data = dataplot, aes(x = lameleg, y = scores, z = types)) +
geom_boxplot(
notch = T,
fill = c("blue", "red", "yellow"),
outlier.color = NULL
) +
theme_classic() +
theme(legend.position = "none")
breaks
warpbreaks
?unique
ggplot(data = dataplot, aes(x = lameleg, y = scores, color = unique(types)) +
notch = T,
outlier.color = NULL
ggplot(data = dataplot, aes(x = lameleg, y = scores, color = unique(types))) +
geom_boxplot(
notch = T,
fill = c("blue", "red", "yellow"),
outlier.color = NULL
) +
theme_classic() +
theme(legend.position = "none")
rlang::last_error()
# Assume your data frame is named dat
D.m = melt(D, id.var=c("A","W"))
library(reshape2)
# Assume your data frame is named dat
D.m = melt(D, id.var=c("A","W"))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = 1)
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red", at = 2)
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = 1)
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red", at = 2)
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = 1)
z$n
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, beside = TRUE, col = "red")
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red", at =5)
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = 5)
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red", at =5)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red")
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
par(mfrow = c(1, 1))
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
dev.size()
dev.size()
par(mfrow = c(1, 1))
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
par(mfrow = c(1, 1))
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red")
lamelegs <- unique(D$lameLeg)
n <- length(lamelegs)
par(mfrow=c(n,2))
for(i in 1:n){
boxplot(D$A[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of A for " ,lamelegs[i]),col = "blue")
boxplot(D$W[D$lameLeg==lamelegs[i]],main= paste0("Boxplot of W for " ,lamelegs[i]),col = "red",add=TRUE)
}
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red")
par(mfrow = c(1, 1))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, add = TRUE, col = "red")
#
par(mfrow = c(1, 2))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = 1)
boxplot(D$W ~ D$lameLeg, main = "Boxplot of W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "red", add = TRUE, at = 2)
#
at <- seq(1, 2, by = 1)
par(mfrow = c(1, 2))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", at = at)
boxplot(D$W ~ D$lameLeg, main = "Boxplot of W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "red", add = TRUE, at = at)
par(mfrow = c(1, 2))
boxplot(D$A ~ D$lameLeg)
boxplot(D$W ~ D$lameLeg)
layout(matrix(c(1, 2), nrow = 1))
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue")
boxplot(D$W ~ D$lameLeg, main = "Boxplot of W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "red")
par(mfrow = c(1, 2))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", outline = F)
boxplot(D$W ~ D$lameLeg, main = "", ylab = "", xlab = "", col = "red", add = TRUE, outline = F)
par(mfrow = c(1, 1))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", outline = F)
boxplot(D$W ~ D$lameLeg, main = "", ylab = "", xlab = "", col = "red", add = TRUE, outline = F)
# Create a separate boxplot for each variable for each level of lameLeg
bpA_1 <- boxplot(D$A[D$lameLeg == "none"], col = "blue", outline = F)
bpA_2 <- boxplot(D$A[D$lameLeg == "left:fore"], col = "blue", outline = F)
bpW_1 <- boxplot(D$W[D$lameLeg == "none"], col = "red", outline = F)
bpW_2 <- boxplot(D$W[D$lameLeg == "left:fore"], col = "red", outline = F)
# Arrange the boxplots in a grid layout
grid.arrange(bpA_1, bpW_1, bpA_2, bpW_2, ncol = 2, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg")
library(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
# Create a separate boxplot for each variable for each level of lameLeg
bpA_1 <- boxplot(D$A[D$lameLeg == "none"], col = "blue", outline = F)
bpA_2 <- boxplot(D$A[D$lameLeg == "left:fore"], col = "blue", outline = F)
bpW_1 <- boxplot(D$W[D$lameLeg == "none"], col = "red", outline = F)
bpW_2 <- boxplot(D$W[D$lameLeg == "left:fore"], col = "red", outline = F)
# Arrange the boxplots in a grid layout
grid.arrange(bpA_1, bpW_1, bpA_2, bpW_2, ncol = 2, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg")
<
<
# Create a separate boxplot for each variable for each level of lameLeg
bpA_1 <- boxplot(D$A[D$lameLeg == "none"], col = "blue", outline = F)
bpA_2 <- boxplot(D$A[D$lameLeg == "left:fore"], col = "blue", outline = F)
bpW_1 <- boxplot(D$W[D$lameLeg == "none"], col = "red", outline = F)
bpW_2 <- boxplot(D$W[D$lameLeg == "left:fore"], col = "red", outline = F)
# Arrange the boxplots in a grid layout
grid.arrange(bpA_1, bpW_1, bpA_2, bpW_2, ncol = 2, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg")
# Create a separate boxplot for each variable for each level of lameLeg
bpA_1 <- grid.draw(boxplot(D$A[D$lameLeg == "none"], col = "blue", outline = F))
library(ggplot2)
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A')) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W')) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
?grid.draw
grid.draw(1)
# Create a separate boxplot for each variable for each level of lameLeg
bpA_1 <- grid.draw(boxplot(D$A[D$lameLeg == "none"], col = "blue", outline = F))
bpA_2 <- boxplot(D$A[D$lameLeg == "left:fore"], col = "blue", outline = F)
bpW_1 <- boxplot(D$W[D$lameLeg == "none"], col = "red", outline = F)
bpW_2 <- boxplot(D$W[D$lameLeg == "left:fore"], col = "red", outline = F)
# Arrange the boxplots in a grid layout
grid.arrange(bpA_1, bpW_1, bpA_2, bpW_2, ncol = 2, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 0.5)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 0.5)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 1.5)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 1.5)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 5)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 5)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 50)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 50)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 50)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 50)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
variety=rep(LETTERS[1:7], each=40)
variety
treatment=rep(c("high","low"),each=20)
treatment
note=seq(1:280)+sample(1:150, 280, replace=T)
note
x <- rep(D$lameLeg, 3)
x
length(note)
length(variety)
length(x)
length(y)
treatment=rep(c("high","low"),each=20)
treatment
data=data.frame(variety, treatment ,  note)
data
length(treatment)
data1 <- data.frame(x, z ,  y)
data1
# grouped boxplot
ggplot(data, aes(x=variety, y=note, fill=treatment)) +
geom_boxplot()
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
x <- rep(D$horse, 3)
y <- c(D$A, D$S, D$W)
z <- rep(c("A","S","W"), c(85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
x <- rep(D$lameLeg, 2)
y <- c(D$A, D$W)
z <- rep(c("A","W"), c(85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot(outlier.shape = NA)
+ scale_y_continuous(limits = c(-0.75, 0.75))
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
+ scale_y_continuous(limits = c(-0.75, 0.75))
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.75, 0.75))
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
x <- rep(D$horse, 3)
y <- c(D$A, D$S, D$W)
z <- rep(c("A","S","W"), c(85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
# Section 2. A/W scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
y <- c(D$A, D$W)
z <- rep(c("A","W"), c(85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. A/W scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
y <- c(D$pc3, D$pc4)
z <- rep(c("A","W"), c(85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
z <- rep(c("A","W", "PC3","PC4"), c(85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
z <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Legend <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=Legend)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. A/W scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
y <- c(D$A, D$W)
Attributes <- rep(c("A","W"), c(85,85))
data1 <- data.frame(x, Attributes ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. PC3/PC4 scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
# Data description - Section 2. A/W scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
y <- c(D$A, D$W)
Attributes <- rep(c("A","W"), c(85,85))
data1 <- data.frame(x, Attributes ,  y)
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. PC3/PC4 scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 2)
y <- c(D$pc3, D$pc4)
Attributes <- rep(c("PC3","PC4"), c(85,85))
data1 <- data.frame(x, Attributes ,  y)
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, Attributes ,  y)
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, Attributes ,  y)
data1$Attributes <- relevel(data1$Attributes, ref = c("PC4", "PC3", "A", "W"))
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
data1$Attributes <- factor(data1$Attributes, levels = c("PC4", "PC3", "A", "W"))
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, Attributes ,  y)
data1$Attributes <- factor(data1$Attributes, levels = c("A", "W", "PC3", "PC4"))
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
# Ikke relevant. Symmetry scores ud fra horse
x <- rep(D$horse, 3)
y <- c(D$A, D$S, D$W)
z <- rep(c("A","S","W"), c(85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
data
data_norm <- D %>% mutate_at(c('A'), ~(scale(.) %>% as.vector))
D$A
j <- scale(D$A)
j
mean(j)
std(j)
sqrt(var(j))
# Ikke relevant. Symmetry scores ud fra horse STANDARDIZED
x <- rep(D$horse, 3)
y <- c(scale(D$A), scale(D$S), scale(D$W))
data_norm <- D %>% mutate_at(c('A'), ~(scale(.) %>% as.vector))
z <- rep(c("A","S","W"), c(85,85,85))
data1 <- data.frame(x, z ,  y)
ggplot(data1, aes(x=x, y=y, fill=z)) +
geom_boxplot()
# Arrange the boxplots in a grid layout
grid.arrange(bpA_1, bpW_1, bpA_2, bpW_2, ncol = 2, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg")
ggplot(data = D) +
geom_boxplot(aes(x = lameLeg, y = A, fill = 'A'), position = position_dodge(width = 50)) +
geom_boxplot(aes(x = lameLeg, y = W, fill = 'W'), position = position_dodge(width = 50)) +
scale_fill_manual(values = c("blue", "red")) +
ggtitle("Boxplot of A and W by LameLeg") +
xlab("LameLeg") +
ylab("Value")
### OK
par(mfrow = c(1, 1))
par(mar = c(5, 8, 4, 2) + 0.1)
boxplot(D$A ~ D$lameLeg, main = "Boxplot of A and W by LameLeg", ylab = "Value", xlab = "LameLeg", col = "blue", outline = F)
boxplot(D$W ~ D$lameLeg, main = "", ylab = "", xlab = "", col = "red", add = TRUE, outline = F)
# Symmetry scores vs horse
lm(A ~ horse, data =D)
# Symmetry scores vs horse
boxplot(lm(A ~ horse, data =D))
# Symmetry scores vs horse
boxplot(A ~ horse, data =D)
boxplot(S ~ horse, data =D)
boxplot(W ~ horse, data =D)
boxplot(S ~ horse, data =D)
boxplot(W ~ horse, data =D)
boxplot(S ~ horse, data =D)
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
x <- rep(D$lameLeg, 4)
y <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(x, Attributes ,  y)
data1$Attributes <- factor(data1$Attributes, levels = c("A", "W", "PC3", "PC4"))
ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
plot <- ggplot(data1, aes(x=x, y=y, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
plot
ggsave("test.tiff", units="in", width=5, height=4, dpi=300, compression = 'lzw')
plot
ggsave("test.tiff", units="in", width=5, height=4, dpi=300, compression = 'lzw')
ggsave(path = plot, width = width, height = height, device='tiff', dpi=700)
ggsave(path = "plot", width = width, height = height, device='tiff', dpi=700)
ggsave(path = "plot.tiff", width = width, height = height, device='tiff', dpi=700)
ggsave(path = "plot.tiff", width = 5, height = 4, device='tiff', dpi=700)
ggsave(filename = "plot.tiff", width = 5, height = 4, device='tiff', dpi=700)
# Data description - Section 2. Combined scores ud fra lameLeg (der er noget at classficiere på)
LameLeg <- rep(D$lameLeg, 4)
Value <- c(D$A, D$W, D$pc3, D$pc4)
Attributes <- rep(c("A","W", "PC3","PC4"), c(85,85,85,85))
data1 <- data.frame(LameLeg, Attributes ,  Value)
data1$Attributes <- factor(data1$Attributes, levels = c("A", "W", "PC3", "PC4"))
plot <- ggplot(data1, aes(x=LameLeg, y=Value, fill=Attributes)) +
geom_boxplot() + scale_y_continuous(limits = c(-0.7, 0.7))
plot
ggsave(filename = "plot.tiff", width = 5, height = 4, device='tiff', dpi=700)
ggsave(filename = "plot.tiff", width = 7, height = 4, device='tiff', dpi=700)
ggsave(filename = "plot.tiff", width = 7, height = 4, device='tiff', dpi=500)
ggsave(filename = "plot.tiff", width = 7, height = 4, device='png', dpi=500)
ggsave(filename = "plot.png", width = 7, height = 4, device='png', dpi=500)
